package require Winiconamespace eval taskbar {    variable ico    variable ico_red    variable state normal        set ico [winico createfrom [file join [file dirname [info script]] taskbar.ico]]    set ico_red [winico createfrom [file join [file dirname [info script]] taskbar_red.ico]]        ::hook::add finload ::taskbar::create_ico}proc taskbar::create_ico {} {    variable ico        ::taskbar::popupmenu .tray        winico taskbar add $ico -text "Need For Talk" \            -callback [namespace code [list callback .tray %m %x %y]] \            -text "Need For Talk" \            -pos 0        ::hook::run taskbar_created $ico}proc taskbar::create {type} {    variable ico    variable ico_red    set ico [winico createfrom [file join [file dirname [info script]] taskbar.ico]]    set ico_red [winico createfrom [file join [file dirname [info script]] taskbar_red.ico]]        if {$type eq "normal"} {        winico taskbar add $ico -text "Need For Talk" \            -callback [namespace code [list callback .tray %m %x %y]] \            -text "Need For Talk" \            -pos 0    } else {        winico taskbar add $ico_red -text "Need For Talk" \            -callback [namespace code [list callback .tray %m %x %y]] \            -text "Need For Talk" \            -pos 0    }}proc taskbar::delete {} {    variable ico    variable ico_red        catch {winico taskbar delete $ico}    catch {winico taskbar delete $ico_red}}proc taskbar::unread {} {    taskbar::delete    taskbar::create red}proc  taskbar::normal {} {    taskbar::delete    taskbar::create normal}proc taskbar::popupmenu {m} {    menu $m -title "Need For Talk Systray" -tearoff 0        $m add command -label [::msgcat::mc "Show"] -command ::taskbar::show    $m add command -label [::msgcat::mc "Hide"] -command ::taskbar::hide    ::hook::run menu_systray $m    $m add separator    $m add command -label [::msgcat::mc "Exit"] -command ::ui::exit    return $m}proc taskbar::show {} {    variable state        wm state . normal    set state normal}proc taskbar::hide {} {    variable state        wm state . withdraw    set state withdraw}proc taskbar::callback {m event x y} {    variable state        switch -- $event {        WM_LBUTTONUP {                switch -- [wm state .] {                zoomed -                    normal {                    wm withdraw .                    }                iconic -                withdraw -                default {                    restore                }            }        }        WM_RBUTTONUP {            $m post $x $y        }    }}proc taskbar::restore {} {    switch -- [wm state .] {        iconic {            wm deiconify .        }        withdraw {            raise .        }        default {            wm deiconify .        }    }    raise .}